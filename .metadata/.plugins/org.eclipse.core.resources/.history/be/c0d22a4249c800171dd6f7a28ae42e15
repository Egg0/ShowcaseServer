

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class UnityServlet
 */
@WebServlet("/UnityServlet")
public class UnityServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static List<GameInfo> games;
	private static LinkedList<Integer> indices;

    /**
     * Default constructor. Parses the site and stores all the games in a list,
     * populates an array of potential indices to choose
     * @throws Exception 
     */
    public UnityServlet() throws Exception {
    	SiteParser sp = new SiteParser();
		sp.parse();
		games = sp.getGames();
		indices = new LinkedList<Integer>();
		checkIndices();
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
		int randomIndex = indices.pop();
		GameInfo game = games.get(randomIndex);
		request.setAttribute("gameCount", games.size());
		request.setAttribute("index", randomIndex);
        request.setAttribute("game", message); // This will be available as ${message}
        request.setAttribute("indices", indices.toString());
        rqeuest.setAttrubute("title", games.get(randomIndex).getTitle());
        request.setAttribute("image", games.get(randomIndex).getImage());
        request.setAttribute("", arg1);
        is.title = title;
		this.image = image;
		this.gameSite = gameSite;
		this.developer = developer;
		this.devSite = devSite;
		this.genre = genre;
		this.description = description;
        request.getRequestDispatcher("/WEB-INF/index.jsp").forward(request, response);
        checkIndices();
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	
	/**
	 * Checks the indices list, if it is empty, refills it and shuffles
	 * @modifies this.indices
	 * @effects if this.indices was empty, it now stores a randomized list of indices into this.games
	 */
	private void checkIndices() {
		if (indices.isEmpty()) {
			for (int i = 0; i < games.size(); i++) {
				indices.add(i);
			}
			Collections.shuffle(indices);
		}
	}

}
